//
//  RequestType.swift
//  SharedKit (Generated by SwiftyLaunch 1.5.0)
//  https://docs.swiftylaun.ch/module/sharedkit/request-permissions
//

import StoreKit  // app review prompt
import SwiftUI

// The Request Process is as follows:
// For app rating:
// We want to show the review prompt every 10th time the user performs some action. (For example, 10th to-do is completed)
// So, every 10th time, we prompt the user our sheet. If he denies rating in our sheet, we will show it again the next 10th action time.
// If he presses on "Rate the App" in our sheet, we will show him the system prompt. After the system prompt has been shown once,
// we will just consume the askUserFor(.appRating) and not show anything.

public enum RequestType: Identifiable {
	/// Ask the user for a review
	case appRating

	public var id: Int {
		hashValue
	}

	public var data: RequestTypeData {
		switch self {
			case .appRating:
				return RequestTypeData(
					sfSymbolName: "star.leadinghalf.filled",
					title: "Rate the App",
					subtitle: "If you like the app, please consider rating it on the App Store. It helps a lot!",
					footerNote: nil,
					ctaText: "Rate the App"
				)
		}
	}

	/// We will use this function to check if the user has already given permission, so we just ignore the request
	@MainActor public var permissionStatus: () async -> RequestPermissionStatus {
		switch self {
			case .appRating:
				return {
					// Check if user already clicked on "Rate the App" Button in our sheet
					// If yes, we just return .gotPermission (don't show the sheet, continue with the app)
					if UserDefaults.standard.bool(
						forKey: Constants.UserDefaults.General.alreadyAskedForAppReviewThroughSystemPrompt
					) {
						return .gotPermission
					}
					
					// Always show the sheet on first click
					return .notYetAsked
				}
		}
	}

	/// True -> the user has accepted the request
	/// False -> the user has denied the request (dismissed the sheet)
	public var requestAction: () async -> Bool {
		switch self {
			case .appRating:
				return {
					let windowScene = await UIApplication.shared.connectedScenes.first as? UIWindowScene

					if let windowScene {
						// if we got window, show the app rating prompt in it
						await AppStore.requestReview(in: windowScene)

						// set in userdefaults that we have shown the prompt
						UserDefaults.standard.set(
							true,
							forKey: Constants.UserDefaults.General
								.alreadyAskedForAppReviewThroughSystemPrompt)
					}
					return true
				}
		}
	}
}

public enum RequestPermissionStatus {
	/// Means the user has not yet given permission
	case notYetAsked

	/// Means the user has already given permission
	case gotPermission

	/// Means the user has denied and we should send the user to the settings
	case denied
}

/// Data to be shown on the RequestSheet
public struct RequestTypeData: Identifiable {
	public let id = UUID()
	let sfSymbolName: String
	let title: LocalizedStringKey
	let subtitle: LocalizedStringKey
	let footerNote: LocalizedStringKey?
	var ctaText: LocalizedStringKey
}
